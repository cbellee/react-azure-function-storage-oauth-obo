{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "sqlAdminUserName": {
      "type": "string"
    },
    "sqlAdminPassword": {
      "type": "string"
    },
    "dbName": {
      "type": "string",
      "defaultValue": "studentdb"
    },
    "tags": {
      "type": "object",
      "defaultValue": {
        "costcenter": 1234567890
      }
    }
  },
  "functions": [],
  "variables": {
    "prefix": "[uniqueString(resourceGroup().id)]",
    "serverName": "[concat(variables('prefix'), '-sqlserver')]",
    "webStorageAccountName": "[concat('webstor', variables('prefix'))]",
    "docsStorageAccountName": "[concat('docstor', variables('prefix'))]",
    "appInsightsName": "[uniqueString(concat(variables('prefix'), '-insights'))]",
    "appName": "[concat(variables('prefix'), '-func')]",
    "webStorageContainerName": "$web"
  },
  "resources": [
    {
      "type": "Microsoft.Sql/servers",
      "apiVersion": "2020-08-01-preview",
      "name": "[variables('serverName')]",
      "tags": "[parameters('tags')]",
      "location": "[resourceGroup().location]",
      "properties": {
        "administratorLogin": "[parameters('sqlAdminUserName')]",
        "administratorLoginPassword": "[parameters('sqlAdminPassword')]",
        "version": "12.0"
      }
    },
    {
      "type": "Microsoft.Sql/servers/databases",
      "apiVersion": "2020-08-01-preview",
      "name": "[format('{0}/{1}', variables('serverName'), parameters('dbName'))]",
      "location": "[resourceGroup().location]",
      "tags": "[parameters('tags')]",
      "sku": {
        "capacity": 5,
        "name": "Basic",
        "tier": "Basic"
      },
      "properties": {
        "createMode": "Default"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Sql/servers', variables('serverName'))]"
      ]
    },
    {
      "type": "Microsoft.Storage/storageAccounts",
      "apiVersion": "2020-08-01-preview",
      "location": "[resourceGroup().location]",
      "kind": "StorageV2",
      "name": "[variables('webStorageAccountName')]",
      "sku": {
        "name": "Standard_LRS",
        "tier": "Standard"
      },
      "properties": {
        "networkAcls": {
          "bypass": "AzureServices",
          "virtualNetworkRules": [],
          "ipRules": [],
          "defaultAction": "Allow"
        },
        "accessTier": "Hot",
        "allowBlobPublicAccess": false,
        "allowSharedKeyAccess": true,
        "supportsHttpsTrafficOnly": true,
        "encryption": {
          "services": {
            "blob": {
              "enabled": true
            }
          },
          "keySource": "Microsoft.Storage"
        }
      }
    },
    {
      "type": "Microsoft.Storage/storageAccounts",
      "apiVersion": "2020-08-01-preview",
      "location": "[resourceGroup().location]",
      "kind": "StorageV2",
      "name": "[variables('docsStorageAccountName')]",
      "sku": {
        "name": "Standard_LRS",
        "tier": "Standard"
      },
      "properties": {
        "networkAcls": {
          "bypass": "AzureServices",
          "virtualNetworkRules": [],
          "ipRules": [],
          "defaultAction": "Allow"
        },
        "accessTier": "Hot",
        "allowBlobPublicAccess": false,
        "allowSharedKeyAccess": true,
        "supportsHttpsTrafficOnly": true,
        "encryption": {
          "services": {
            "blob": {
              "enabled": true
            }
          },
          "keySource": "Microsoft.Storage"
        }
      }
    },
    {
      "type": "Microsoft.Storage/storageAccounts/blobServices/containers",
      "apiVersion": "2020-08-01-preview",
      "name": "[concat(variables('webStorageAccountName'), '/default/', variables('webStorageContainerName'))]",
      "properties": {
        "publicAccess": "None"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts', variables('webStorageAccountName'))]"
      ]
    },
    {
      "type": "Microsoft.Insights/components",
      "apiVersion": "2020-02-02-preview",
      "name": "[variables('appInsightsName')]",
      "location": "[resourceGroup().location]",
      "kind": "web",
      "tags": "[parameters('tags')]",
      "properties": {
        "Application_Type": "web"
      }
    },
    {
      "type": "Microsoft.Web/sites",
      "apiVersion": "2020-06-01",
      "location": "[resourceGroup().location]",
      "name": "[variables('appName')]",
      "kind": "functionapp,linux",
      "properties": {
        "reserved": true,
        "siteConfig": {
          "appSettings": [
            {
              "name": "AzureWebJobsStorage",
              "value": "[concat('DefaultEndpointsProtocol=https;AccountName=', variables('webStorageAccountName'), ';AccountKey=', listKeys(variables('webStorageAccountName'), '2019-06-01').keys[0].value)]"
            },
            {
              "name": "FUNCTIONS_WORKER_RUNTIME",
              "value": "node"
            },
            {
              "name": "WEBSITE_NODE_DEFAULT_VERSION",
              "value": "10.14"
            },
            {
              "name": "FUNCTIONS_EXTENSION_VERSION",
              "value": "~3"
            },
            {
              "name": "APPINSIGHTS_INSTRUMENTATIONKEY",
              "value": "[reference(resourceId('microsoft.insights/components/', variables('appInsightsName')), '2015-05-01').InstrumentationKey]"
            }
          ]
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Insights/components', variables('appInsightsName'))]",
        "[resourceId('Microsoft.Storage/storageAccounts', variables('webStorageAccountName'))]"
      ]
    }
  ],
  "outputs": {
    "webStorageAccountName": {
      "type": "string",
      "value": "[variables('webStorageAccountName')]"
    },
    "docsStorageAccountName": {
      "type": "string",
      "value": "[variables('docsStorageAccountName')]"
    },
    "functionName": {
      "type": "string",
      "value": "[variables('appName')]"
    },
    "sqlDatabaseName": {
      "type": "string",
      "value": "[reference(resourceId('Microsoft.Sql/servers/databases', split(format('{0}/{1}', variables('serverName'), parameters('dbName')), '/')[0], split(format('{0}/{1}', variables('serverName'), parameters('dbName')), '/')[1])).databaseId]"
    },
    "sqlServerName": {
      "type": "string",
      "value": "[variables('serverName')]"
    }
  },
  "metadata": {
    "_generator": {
      "name": "bicep",
      "version": "0.3.1.62928",
      "templateHash": "7590167256531906547"
    }
  }
}