# Node.js Express Web App to Linux on Azure
# Build a Node.js Express app and deploy it to Azure as a Linux web app.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/javascript

trigger:
- main

variables:

  # Azure Resource Manager connection created during pipeline creation
  azureSubscription: '015aec61-a5ca-4160-ac6a-4dc74d5889ce'

  # Web app name
  webAppName: ''

  # Environment name
  environmentName: ''

  # Agent VM image name
  vmImageName: 'ubuntu-latest'

stages:
- stage: Build
  displayName: Build stage
  jobs:
  - job: Build
    displayName: Build
    pool:
      vmImage: $(vmImageName)

    steps:
    - task: NodeTool@0
      inputs:
        versionSpec: '10.x'
      displayName: 'Install Node.js'

    - script: |
        cd ./client/src
        npm install
        npm run build --if-present
        npm run test --if-present
      displayName: 'npm install, build and test'

    - task: ArchiveFiles@2
      displayName: 'Archive files'
      inputs:
        rootFolderOrFile: '$(System.DefaultWorkingDirectory)'
        includeRootFolder: false
        archiveType: zip
        archiveFile: $(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip
        replaceExistingArchive: true

    - upload: $(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip
      artifact: drop

- stage: Deploy
  displayName: Deploy stage
  dependsOn: Build
  condition: succeeded()
  variables: 
    - name: LOCATION
      value: 'australiaeast'
    - name: RG_NAME
      value: 'australiaeast'
  jobs:
    - job: "BicepConfigure"
      steps:
        - task: Bash@3
          displayName: 'Install Bicep'
          inputs:
            targetType: inline
            script: |
              curl -Lo bicep https://github.com/Azure/bicep/releases/latest/download/bicep-linux-x64
              chmod +x ./bicep
              ./bicep build $(System.DefaultWorkingDirectory)/iac/main.bicep
 
        - task: AzureCLI@2
          displayName: 'Deploy Bicep Configuration'
          inputs:
            azureSubscription: 'tamopstf'
            scriptType: bash
            scriptLocation: inlineScript
            addSpnToEnvironment: true
            inlineScript: |
              #!/bin/bash
              az group create -l $LOCATION -n $RG_NAME 
              az deployment group create -f $(System.DefaultWorkingDirectory)/iac/main.json -g $RG_NAME

  - deployment: Deploy
    displayName: Deploy
    environment: $(environmentName)
    pool:
      vmImage: $(vmImageName)
    strategy:
      runOnce:
        deploy:
          steps:
          - task: AzureWebApp@1
            displayName: 'Azure Web App Deploy: '
            inputs:
              azureSubscription: $(azureSubscription)
              appType: webAppLinux
              appName: $(webAppName)
              runtimeStack: 'NODE|10.10'
              package: $(Pipeline.Workspace)/drop/$(Build.BuildId).zip
              startUpCommand: 'npm run start'