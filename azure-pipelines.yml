# Node.js Express Web App to Linux on Azure
# Build a Node.js Express app and deploy it to Azure as a Linux web app.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/javascript

trigger:
- main

variables:
  azureSubscription: 'internal_azure_subscription'
  environmentName: 'dev'
  vmImageName: 'ubuntu-latest'
  location: 'australiaeast'
  resourceGroupName: 'student-app-2-rg'

stages:
- stage: Build
  displayName: Build stage
  jobs:
  - job: Build
    displayName: Build
    pool:
      vmImage: $(vmImageName)

    steps:
    - task: NodeTool@0
      inputs:
        versionSpec: '10.x'
      displayName: 'Install Node.js'

    - script: |
        cd ./client/src
        npm install
        npm run build --if-present
        npm run test --if-present
      displayName: 'npm install, build and test'

    - task: ArchiveFiles@2
      displayName: 'Archive files'
      inputs:
        rootFolderOrFile: '$(System.DefaultWorkingDirectory)'
        includeRootFolder: false
        archiveType: zip
        archiveFile: $(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip
        replaceExistingArchive: true

    - task: Bash@3
      displayName: 'Install Bicep'
      inputs:
        targetType: inline
        script: |
          curl -Lo bicep https://github.com/Azure/bicep/releases/latest/download/bicep-linux-x64
          chmod +x ./bicep
          ./bicep build $(System.DefaultWorkingDirectory)/iac/main.bicep

    - task: CopyFiles@2
      displayName: 'Copy ARM Template files to Staging directory'
      inputs:
        SourceFolder: ./iac
        Contents: main.json
        TargetFolder: $(Build.ArtifactStagingDirectory)/templates
    
    - task: PublishBuildArtifacts@1
      displayName: 'Publish ARM Templates'
      inputs:
        PathtoPublish: $(Build.ArtifactStagingDirectory)/templates
        ArtifactName: templates
  
    - task: PublishBuildArtifacts@1
      displayName: 'Publish function archive'
      inputs:
        PathtoPublish: $(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip
        ArtifactName: function

- stage: Deploy
  displayName: Deploy stage
  dependsOn: Build
  condition: succeeded()
  jobs:
    - job: "BicepConfigure"
      steps:
        - task: AzureResourceManagerTemplateDeployment@3
          inputs:
            deploymentScope: 'Resource Group'
            azureResourceManagerConnection: $(azureSubscription)
            action: 'Create Or Update Resource Group'
            resourceGroupName: $(resourceGroupName)
            location: $(location)
            templateLocation: 'Linked artifact'
            csmFile: $(Pipeline.Workspace)/templates/main.json
            deploymentMode: Incremental
            deploymentOutputs: deploymentOutput

    - deployment: Deploy
      displayName: Deploy
      environment: $(environmentName)
      pool:
        vmImage: $(vmImageName)
      strategy:
        runOnce:
          deploy:
            steps:
            - task: AzureFunctionApp@1
              displayName: 'Deploy Azure Function'
              inputs:
                azureSubscription: $(azureSubscription)
                appType: functionAppLinux
                appName: $(deploymentOutput.functionName)
                runtimeStack: 'NODE|12'
                package: $(Pipeline.Workspace)/function/$(Build.BuildId).zip
                startUpCommand: 'npm run start'